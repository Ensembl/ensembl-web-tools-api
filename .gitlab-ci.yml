#
#    See the NOTICE file distributed with this work for additional information
#    regarding copyright ownership.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  NFS_SERVER: ${HL_NFS_SERVER_CODON}
  NFS_PATH: ${HL_NFS_OPPATH_CODON}

stages:
  - test
  - build
  - deploy

# Templates
.branch-rules-main:
    rules:
        - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "main"'
          when: on_success
        - when: never

.branch-rules-dev:
    rules:
        - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "dev"'
          when: on_success
        - when: never

.branch-rules-review:
    rules:
        - if: '$CI_DEPLOY_FREEZE == null && ($CI_COMMIT_BRANCH != "main" || $CI_COMMIT_BRANCH != "dev")'
          when: on_success
        - when: never

.deploy-rules:
    rules:
        - if: '$CI_DEPLOY_FREEZE == null'
          when: on_success
        - when: never

.deploy:
  stage: deploy
  extends: .deploy-rules
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
  before_script:
    - kubectl config use-context ${AGENT}
    - kubectl config set-context --current --namespace=${NS}
  script:
    - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
    - git -C ensembl-k8s-manifests/ checkout k8s123-migration
    - cd ensembl-k8s-manifests/ensembl-web-tools-api
    - sed -i "s#<NFS_SERVER>#${NFS_SERVER}#g" deployment.yaml
    - sed -i "s#<NFS_PATH>#${NFS_PATH}#g" deployment.yaml
    - kustomize edit set image DOCKER_IMAGE=${DOCKER_IMAGE}
    - kubectl apply -k ./

# Run tests
Test:
  stage: test
  extends:
    - .deploy-rules
  image: python:3.10
  before_script:
    - pip install -r requirements-dev.txt
    - cp -r ./data /data
    - cd app/
    - cp .env.sample .env
    - ls -al ../
  script:
    - python -m pytest  --ignore=tests/test_vep.py --cov --junitxml=report.xml
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
  except:
    - /^skiptest\/.*$/

# Build the docker image
Docker:
  stage: build
  extends:
    - .deploy-rules
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t ${DOCKER_IMAGE} --no-cache .
    - docker push ${DOCKER_IMAGE}
    - docker rmi ${DOCKER_IMAGE}
    - docker logout $CI_REGISTRY

# Deploy feature branch (for custom backend review apps)
Review:
  extends: 
    - .deploy
    - .branch-rules-review
  environment:
    name: development
  variables: 
    AGENT: ${DEV_AGENT}
    NS: ${CI_COMMIT_REF_SLUG}
  before_script:
    - kubectl config use-context ${AGENT}
    # Check for review namespace and remove the default backend ingress
    - kubectl get namespace ${NS} > /dev/null || (echo "Please create '${NS}' branch in ensembl-client and restart this pipeline" && exit 1)
    - kubectl -n ensembl-dev delete ingress ensembl-tools-api-ingress-${NS} || true
    - kubectl config set-context --current --namespace=${NS}
  after_script:
    # Add the missing resources to the review namespace
    - cd ensembl-k8s-manifests/ensembl-web-tools-api
    - sed -i "s#HOST#${CI_COMMIT_REF_SLUG}.review.ensembl.org#" ingress.yaml
    - kubectl apply -f ingress.yaml
    - git clone https://config-ro-user:${CONFIG_RO_TOKEN}@gitlab.ebi.ac.uk/ensembl-web/newsite-api-config-setup.git
    - cd newsite-api-config-setup/dev/hl
    - kubectl create secret generic ensembl-web-tools-api-secret --from-env-file=tools-api.secret --dry-run=client -o yaml | kubectl apply -f -

# Stop review app (cleanup backend resources) 
Stop_review:
  extends: .branch-rules-review
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
  environment:
    name: development
  variables:
    GIT_STRATEGY: none
    AGENT: ${DEV_AGENT}
    NS: ${CI_COMMIT_REF_SLUG}
  script:
    - kubectl -n ${NS} delete service ensembl-tools-api-svc
    - kubectl -n ${NS} delete deploy ensembl-tools-api-deployment
    - kubectl -n ${NS} delete ingress ensembl-tools-api-ingress
    - kubectl -n ${NS} delete secret ensembl-tools-api-secret

# Deploy dev branch
Dev:
  extends: 
    - .deploy
    - .branch-rules-dev
  environment:
    name: development
  variables: 
    AGENT: ${DEV_AGENT}
    NS: ${DEV_NS}

Internal:
  extends: 
    - .deploy
    - .branch-rules-dev
  environment:
    name: internal
  variables: 
    AGENT: ${INTERNAL_AGENT}
    NS: ${INTERNAL_NS}

Staging:
  extends: 
    - .deploy
    - .branch-rules-dev
  environment:
    name: staging
  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "dev"'
  variables: 
    AGENT: ${STAGING_AGENT}
    NS: ${STAGING_NS}

# Deploy main branch
Production:
  extends: 
    - .deploy
    - .branch-rules-main
  environment:
    name: production
  variables: 
    AGENT: ${PROD_AGENT}
    NS: ${PROD_NS}

Fallback:
  extends: 
    - .deploy
    - .branch-rules-main
  environment:
    name: fallback
  variables: 
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}
